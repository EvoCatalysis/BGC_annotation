import pyhmmer
import itertools
# Pfam HMM 文件
hmm_file = "Pfam-A.hmm"
test_sequence=["MLTPYGPGGLLLVRDGDGRCVAVIDPATGRIVRAPGHSLSPAAAVPGARGARGTTDGLNQFSGVFPNQGSYAGGTLVTIIGTHFSHATAVYFGPRPAASFAVLDDRTIVAVTPSGSGSAPVTVTTPGGTARVGSFYYQYWPSLSGVIPAAGPVGGGNIVTLRGANLSTALLVHFGDAVAFPLVVSDAQLLVTAPPVTGPGSVPVYVAGIGGVSNRLLYTYAAAPSVTAVSPAAGPIAGGSTIVVTGTGLAGVTGVTIGGLPATSFRAYSDTLLVVVTPPGTPGPADITVTTPGGSVTVPAAFDYMAPSTTEVTSDPDPALVGQPVAFTATVAAVAPTTGTPTGTVTFDFGDGTAPVTAAVTDGTATVSHAYTAPSGTPYAVTAAYSGDLFFTSSSGADTQVVEASPTTTTLTSTPDPSQAGQPVAFVARVAPAPPGAGVPTGTVTFDFGDGTPPVTLPVSGGTASVTHAYATAAESPYPVSATYDGDDNFTPSTGTDSQTVQQAATATAVSVSPTSSVAGQPVTVTASVTSLPPGAGTPTGTVTFDFGDGTPPVTLPLTDGTADATHAFGAAGSPYTLTATYSGDDSFSASTGTGSQTVGQASSALAVSSTPDSSTVGQEVTFTATVTTLPPGGGTPTGTVTFDFGDGTPPVTLPLTDGTADATHAYTDAAATPYTVTVSYSGDADISAATSTALQTVGQASSATTVTSTPDPSTVGQQVTFTATVATLPPGSGTPTGTVTFDFGDGSPTTTALLSAGSTATTHAYTDAAGSPYTVTATYNGDANVTPSTGTDDQTVQTADTTLSLDSAPDPSTIGQSTTFVAKITPEAPAAGAPTGTVTFDFGDGSPPVTAPVEGGTATVTHTNSGVADSPYTVTATYSGDGNFNPSAGADTQVVTQAVSSTALSAGPSPSVTGQAVTFAAVVSAVPPAAGTPTGTVTFDFGDGTPPVTLPLTDGTADATHAYTDAAATPYTVTVSYSGDTNFLPSSGTDLHSVEPAPTLTTVTAAPDPSVTGEAVTVTVTPRAPGAGIPTGQAAFDFGDGSPVLTAQLENGTATVVHAYTSAAGSPYTITAHYSGDADFAPSDDTLSHTVAPAATTTVVTSSADPAAVGQSVTLIARVRPVPPGAGDPTGTVTFDFGDGTAPVTAPVSGGLATAVHAYAGTAGSPYTVTASYSGDPDFAASSGTAAQRVDSSVSTTATTVSSAPDPSTVGESVTFTAVVVAVPPASGTPTGTVTFDFGDGSAPVTAPLAGGTATAAHTYTAAAHPASVTAVYHGDTNFAGSAGLDTQTVSEAVSSTTLTSSPDPSVTGGPVTFTATVAAVDAGAGTPTGSVTLDFGDGSPTLRAPLTDGIATAVHAYTGTSGSPYAVTATYNGDAAFTGSTDTGTQTVNPATTATAVFSSPDPSTAGQPVTVTASLAAVSPGTGTPTGTVTFDFGDGTPPVTTPAVGGLATVTHAYTTTVNSPFTLTAAYSGDADFAASTGTTTQTVLQSAVTLAVSTGPNPTVAGEPVTLTATAAPVPPGAGVPTDTITVDFGDGTAPVTDSLAGGALHLTHTYASVAGSPYTITATYNGSDDFSSAVVTATETVLQDATTTTVAAAPIPSVVGQPVTFTASVKPVAGGGSPTGTVTLDFGDGTVPVAMPVVDGVATAQHAFTGTFGSPYAVTAAYSGDTDFTASGGGVTQTVGQAPSVTTVTASPDPSVTGQPVTVTATVAAAAPGAGSPTGTVTFDFGDGTATVTAPVAGGVATAAHTWTGTAGSPYTVTAAYSGDTDFSPATGTGTHTVAAAGTTTVVVSSPDPSVSGQVVTVMAGVAANTPGDGVPTGTVTFDFGDGSPAVTASLTGGTASTTHAWPGTSGSPYTVTATYSGDGDFAPSTGSGSQSVTPATTALTVSGLPEPSVTGQPVTFFARVAPDGGGDGTPTGTVTYDFGDGTTPVVAPVTDGMATAVHAYPSAAGSPFTVTATYSGDADFLASVAAEIHTVLPAVSTTVVSSSPDPSVSGQPVTVTAAVTAEAPGAGTPTGTVTFDFGDGTTPVTAPVTDGTATATHVWSSTSGSPYTLTATYSGDAGFTPSKATGTKTVTAAATTTAVTSSPDPSVPGQSVTLTATVAALAPGAGSPTGTVTFTFGDGTPAVSATVLAGSATVTHAWAGTAGSPYPITADYSGDPDFNPSSGSDTQTVGQGATGLSLVSSPDPSVAGQEVTFTARVTAVPPGAGTPTGTVTFDFGDGTAPVTAPVSAGVATIAHTYATASATPYAVTATYSGDPDFAPATVTAPHTVAAGAATTSTTVVSSPDPTVTGQPVTFTATVTPTPPGAGVPTGTVAFDFGDGTATITAPVSGGVATVTHTYVSAAGSPYAVSARYSGDSNFSSSSGTDLHTVAPASTLTTLTSAPDPSVTGQPVTLTATVAALAPGAGVPTGTVTFDFGDGTPTTSAPVSGGVARVTHTYTSASGPLTVTALYDGDVSFLSSSGTDTQTVNKAATTTAVVSSPDPTVVGQAMTITASVASAAPGSGTPTGTVTFDFGDGTAPVTAPVAGGLATVAHTYTATAGSPYPLTATYNGDANYTPSSGTDTQTVNKAATTTAVVSSPDPTVVGQTTTITATVVSVAPGTGTPTGTVTFSFGDGSPSVTAPVVGGQATVTRASTSSGPVTLTATYNGDANYTPSNGSNTQTVNKAATTTALASAPDPTVAGQSVTLTATVAPVAPGAGTPTGTVTFSFGDGTGSTTATLSGGTATVTHTYTATSATPYPLAATYNGDANYTSSSGSDTQTVNKAATTTALVSSPDPSVAGQPVTLTATVAPVAPWSRHPHRHRHLLLRRRHRLHHRHPLRRHRHRHPHLHRHVRHPVPPRRHLQRGRQLHLVQRLGHPDRQQGGHHDGAGLLARSQRRRPAGHPHRDRGPRRPLEQAPPPAPSPSPSATAPAPPPPPSPAAPPPSPTPTPPRPPPRTPSPPPTTGTPTTPRPAARTPRPSTRRPPRRRWSPRPIPASPASRSPSPRPWPPSPPGAGTPTGTVTFSFGDGTGSTTATLSGGTATVTHTYTAASTTASPLTATYNGGTNFTTSSGSDTQTVNKAATATAVSSTPDPSAAGQAVTVTAAVSALAPGAGTPTGTVTFTFGDGTSSSTVPLSGGIATVSHTYTTKTGSPFPLTAKYNGDTSFTTSSGAATHTVNQNLTTTTVTTSPDPSVVGQSVTLRATVSSAGGIPTGKVTFSFGDGTSSVAATLAGGVATVTHTYTTTTGSPFTVTATYGGEVSFTASSGTDTQTVNKAATLTSVVSTPNPASTGDRVTVTATVVPVAPGAGTPSGTVTLAIPGRTPQTVALVNGSASATFSPLPRGIYTVTGNYNGDVSFAGSTGLTLQTVV",
"VVIVGMSCRFPGGVGSPEDLWGLLVGGGDGVVPFPVERGWDVEGLFDPEPGVPGKVSTREGGFLPGVDEFDPGFFGISPREAVAMDPQQRLLLEASWEAFERAGIVPGVLRGSRTGVFAGTNGQDYTGLLVASGEEDLGGYIGTGNAASVVSGRLSYTFGLEGPAVTVDTACSASLVALHLAVQSLRAGECDLALAGGVTVMSTPGLFVDFSRQRGLAADGRCKAFSDAADGAGFSEGVGVLVVERLSDARRHGHRVLAVVAGSAVNQDGASNGLTAPNGPSQQRVIRQALAGAGLSPSDVDVVEAHGTGTSLGDPIEAQALLATYGQGRDADRPLWLGSVKSNIGHTQAAAGVAGVIKMVLALQHGVLPQTLHVDEPSSHVDWSAGEVRLLTESVQWPEGERPRRAGVSSFGISGTNAHTIIEEAP"]
def pfam_indentify(hmm_file,protein_sequence,BGC_number): 
    alphabet = pyhmmer.easel.Alphabet.amino()
    error_num=0
    result=[]
    seq_object=[]
    for sequence in protein_sequence:
        text_seq=pyhmmer.easel.TextSequence(sequence=sequence)
        digital_seq=text_seq.digitize(alphabet)
        seq_object.append(digital_seq)
    with pyhmmer.plan7.HMMFile(hmm_file) as hmms:
        print(f"Scanning BGC:{BGC_number}")
        hits = pyhmmer.hmmscan(seq_object,hmms,cpus=40,E=1e-10) #generator
        for hit in hits: #hit:an enzyme in a BGC
            if len(hit)==0:
                result.append(("error","error",0))
            else:
                domains=[]
                for domain in hit:
                    domains.append((domain.accession.decode(),domain.name.decode(),domain.evalue))
                result.append(domains)
    return result

def pfam_try(hmm_file,protein_sequence):
    alphabet = pyhmmer.easel.Alphabet.amino()
    seq_object=[]
    for sequence in protein_sequence:
        text_seq=pyhmmer.easel.TextSequence(sequence=sequence)
        digital_seq=text_seq.digitize(alphabet)
        seq_object.append(digital_seq)
    with pyhmmer.plan7.HMMFile(hmm_file) as hmms:
        hits = pyhmmer.hmmscan(seq_object,hmms,cpus=4,E=1e-10) #generator
        return hits

if  __name__ == "__main__":
    import pickle
    result={}
    with open("BGC_data_unique4.pkl","rb") as f:
        BGC_enzyme=pickle.load(f)
        print("BGC data loaded,","length:",len(BGC_enzyme))
    for BGC_number,enzyme_list in BGC_enzyme.items():
        result[BGC_number]=pfam_indentify(hmm_file,enzyme_list,BGC_number)
    #print(result)
    with open("BGC_domain_pfam.pkl", 'wb') as f:
        pickle.dump(result, f)